# )
result$RSE <- RSE_vec
result$MSE <- MSE_vec
result$theta <- Theta_sub
result$mu <- Mean_sub
result$coef <- Coefficient
result$u <- u
result$vim <- vim
return(result)
}
data_sim <- function(sigma2_v, X1 = NULL, X2 = NULL){
narea=10
nsub=3
n=narea*nsub
codearea=c()
for(i in 1:narea){
codearea=c(codearea,rep(i,nsub))
}
b0=b1=b2=0.5
#X1=runif(n,0,1)
#X2=runif(n,0,1)
#if (is.null(X1)) X1 = runif(n, 0, 1)
#if (is.null(X2)) X2 = runif(n, 0, 1)
v=rnorm(narea,0,sqrt(sigma2_v)) #Area Random Effect
u=rnorm(n,0,1) #Subarea Random Effect
vim=c()
for(i in 1:n){vim[i]=v[codearea[i]]}
Mu <- exp(b0+b1*X1+b2*X2+u+vim)/(1+exp(b0+b1*X1+b2*X2+u+vim))
pi=rgamma(1,1,0.5)
A=Mu*pi
B=(1-Mu) * pi
y=rbeta(n,A,B)
y <- ifelse(y<1,y,0.99)
y <- ifelse(y>0,y,0.01)
MU=A/(A+B)
vardir = (A*B)/((A+B)^2*(A+B+1))
w <- runif(n,0.2,0.7)
dataBeta <- as.data.frame(cbind(Mu, y, X1, X2, vardir,codearea,w, u, vim))
return(dataBeta)
}
run_simulation <- function(sigma2_v, B = 3) {
result <- list()
n <- 30
X1_fixed <- runif(n, 0, 1)
X2_fixed <- runif(n, 0, 1)
RSE_vec <- numeric(B)
MSE_vec <- numeric(B)
Theta_sub <- vector("list", B)
Coefficient <- vector("list", B)
Mean_sub <- vector("list", B)
for (b in 1:B) {
# Data dari fungsi buatanmu
data_b <- data_sim(sigma2_v = sigma2_v, X1 = X1_fixed, X2 = X2_fixed)
theta_true <- data_b$Mu
formula <- y ~ X1 + X2
# Estimasi dengan fungsi betaTF milikmu
est <- betaTF(formula, area = "codearea", weight = "w", data = data_b, iter.update = 3, iter.mcmc = 10000, burn.in = 5000, thin = 3)
theta_hat <- est$Est_sub$Mean
RSE_vec[b] <- mean(est$Est_sub$SD / est$Est_sub$Mean)
MSE_vec[b] <- mean((theta_hat - theta_true)^2)
Coefficient[[b]] <- est$coefficient
Mean_sub[[b]] <- est$Est_sub
Theta_sub[[b]] <- theta_true
u[[b]] <- data_b$u
vim[[b]] <- data_b$vim
}
# result$evaluation <- data.frame(
#   RSE = mean(RSE_vec),
#   MSE = mean(MSE_vec)
# )
result$RSE <- RSE_vec
result$MSE <- MSE_vec
result$theta <- Theta_sub
result$mu <- Mean_sub
result$coef <- Coefficient
result$u <- u
result$vim <- vim
return(result)
}
sim_1 <- run_simulation(sigma2_v = 1)
run_simulation <- function(sigma2_v, B = 3) {
result <- list()
n <- 30
X1_fixed <- runif(n, 0, 1)
X2_fixed <- runif(n, 0, 1)
RSE_vec <- numeric(B)
MSE_vec <- numeric(B)
Theta_sub <- vector("list", B)
Coefficient <- vector("list", B)
Mean_sub <- vector("list", B)
u <- vector("list", B)
vim <- vector("list", B)
for (b in 1:B) {
# Data dari fungsi buatanmu
data_b <- data_sim(sigma2_v = sigma2_v, X1 = X1_fixed, X2 = X2_fixed)
theta_true <- data_b$Mu
formula <- y ~ X1 + X2
# Estimasi dengan fungsi betaTF milikmu
est <- betaTF(formula, area = "codearea", weight = "w", data = data_b, iter.update = 3, iter.mcmc = 10000, burn.in = 5000, thin = 3)
theta_hat <- est$Est_sub$Mean
RSE_vec[b] <- mean(est$Est_sub$SD / est$Est_sub$Mean)
MSE_vec[b] <- mean((theta_hat - theta_true)^2)
Coefficient[[b]] <- est$coefficient
Mean_sub[[b]] <- est$Est_sub
Theta_sub[[b]] <- theta_true
u[[b]] <- data_b$u
vim[[b]] <- data_b$vim
}
# result$evaluation <- data.frame(
#   RSE = mean(RSE_vec),
#   MSE = mean(MSE_vec)
# )
result$RSE <- RSE_vec
result$MSE <- MSE_vec
result$theta <- Theta_sub
result$mu <- Mean_sub
result$coef <- Coefficient
result$u <- u
result$vim <- vim
return(result)
}
sim_1 <- run_simulation(sigma2_v = 1)
sim_1$theta
sim_1$u
mean(sim_1$u[[1]])
sim_1$vim
data_sim <- function(sigma2_v, X1 = NULL, X2 = NULL){
narea=30
nsub=3
n=narea*nsub
codearea=c()
for(i in 1:narea){
codearea=c(codearea,rep(i,nsub))
}
b0=b1=b2=0.5
#X1=runif(n,0,1)
#X2=runif(n,0,1)
#if (is.null(X1)) X1 = runif(n, 0, 1)
#if (is.null(X2)) X2 = runif(n, 0, 1)
v=rnorm(narea,0,sqrt(sigma2_v)) #Area Random Effect
u=rnorm(n,0,1) #Subarea Random Effect
vim=c()
for(i in 1:n){vim[i]=v[codearea[i]]}
Mu <- exp(b0+b1*X1+b2*X2+u+vim)/(1+exp(b0+b1*X1+b2*X2+u+vim))
pi=rgamma(1,1,0.5)
A=Mu*pi
B=(1-Mu) * pi
y=rbeta(n,A,B)
y <- ifelse(y<1,y,0.99)
y <- ifelse(y>0,y,0.01)
MU=A/(A+B)
vardir = (A*B)/((A+B)^2*(A+B+1))
w <- runif(n,0.2,0.7)
dataBeta <- as.data.frame(cbind(Mu, y, X1, X2, vardir,codearea,w, u, vim))
return(dataBeta)
}
data_sim <- function(sigma2_v, X1 = NULL, X2 = NULL){
narea=30
nsub=3
n=narea*nsub
codearea=c()
for(i in 1:narea){
codearea=c(codearea,rep(i,nsub))
}
b0=b1=b2=0.5
#X1=runif(n,0,1)
#X2=runif(n,0,1)
#if (is.null(X1)) X1 = runif(n, 0, 1)
#if (is.null(X2)) X2 = runif(n, 0, 1)
v=rnorm(narea,0,sqrt(sigma2_v)) #Area Random Effect
u=rnorm(n,0,1) #Subarea Random Effect
vim=c()
for(i in 1:n){vim[i]=v[codearea[i]]}
Mu <- exp(b0+b1*X1+b2*X2+u+vim)/(1+exp(b0+b1*X1+b2*X2+u+vim))
pi=rgamma(1,1,0.5)
A=Mu*pi
B=(1-Mu) * pi
y=rbeta(n,A,B)
y <- ifelse(y<1,y,0.99)
y <- ifelse(y>0,y,0.01)
MU=A/(A+B)
vardir = (A*B)/((A+B)^2*(A+B+1))
w <- runif(n,0.2,0.7)
dataBeta <- as.data.frame(cbind(Mu, y, X1, X2, vardir,codearea,w, u, vim))
return(dataBeta)
}
run_simulation <- function(sigma2_v, B = 2) {
result <- list()
n <- 90
X1_fixed <- runif(n, 0, 1)
X2_fixed <- runif(n, 0, 1)
RSE_vec <- numeric(B)
MSE_vec <- numeric(B)
Theta_sub <- vector("list", B)
Coefficient <- vector("list", B)
Mean_sub <- vector("list", B)
for (b in 1:B) {
# Data dari fungsi buatanmu
data_b <- data_sim(sigma2_v = sigma2_v, X1 = X1_fixed, X2 = X2_fixed)
theta_true <- data_b$Mu
formula <- y ~ X1 + X2
# Estimasi dengan fungsi betaTF milikmu
est <- betaTF(formula, area = "codearea", weight = "w", data = data_b, iter.update = 3, iter.mcmc = 10000, burn.in = 5000, thin = 3)
theta_hat <- est$Est_sub$Mean
RSE_vec[b] <- mean(est$Est_sub$SD / est$Est_sub$Mean)
MSE_vec[b] <- mean((theta_hat - theta_true)^2)
Coefficient[[b]] <- est$coefficient
Mean_sub[[b]] <- est$Est_sub
Theta_sub[[b]] <- theta_true
}
# result$evaluation <- data.frame(
#   RSE = mean(RSE_vec),
#   MSE = mean(MSE_vec)
# )
result$RSE <- RSE_vec
result$MSE <- MSE_vec
result$theta <- Theta_sub
result$mu <- Mean_sub
result$coef <- Coefficient
return(result)
}
sim_1 <- run_simulation(sigma2_v = 1)
devtools::load_all()
data_sim <- function(sigma2_v, X1 = NULL, X2 = NULL){
narea=30
nsub=3
n=narea*nsub
codearea=c()
for(i in 1:narea){
codearea=c(codearea,rep(i,nsub))
}
b0=b1=b2=0.5
#X1=runif(n,0,1)
#X2=runif(n,0,1)
#if (is.null(X1)) X1 = runif(n, 0, 1)
#if (is.null(X2)) X2 = runif(n, 0, 1)
v=rnorm(narea,0,sqrt(sigma2_v)) #Area Random Effect
u=rnorm(n,0,1) #Subarea Random Effect
vim=c()
for(i in 1:n){vim[i]=v[codearea[i]]}
Mu <- exp(b0+b1*X1+b2*X2+u+vim)/(1+exp(b0+b1*X1+b2*X2+u+vim))
pi=rgamma(1,1,0.5)
A=Mu*pi
B=(1-Mu) * pi
y=rbeta(n,A,B)
y <- ifelse(y<1,y,0.99)
y <- ifelse(y>0,y,0.01)
MU=A/(A+B)
vardir = (A*B)/((A+B)^2*(A+B+1))
w <- runif(n,0.2,0.7)
dataBeta <- as.data.frame(cbind(Mu, y, X1, X2, vardir,codearea,w, u, vim))
return(dataBeta)
}
run_simulation <- function(sigma2_v, B = 2) {
result <- list()
n <- 90
X1_fixed <- runif(n, 0, 1)
X2_fixed <- runif(n, 0, 1)
RSE_vec <- numeric(B)
MSE_vec <- numeric(B)
Theta_sub <- vector("list", B)
Coefficient <- vector("list", B)
Mean_sub <- vector("list", B)
for (b in 1:B) {
# Data dari fungsi buatanmu
data_b <- data_sim(sigma2_v = sigma2_v, X1 = X1_fixed, X2 = X2_fixed)
theta_true <- data_b$Mu
formula <- y ~ X1 + X2
# Estimasi dengan fungsi betaTF milikmu
est <- betaTF(formula, area = "codearea", weight = "w", data = data_b, iter.update = 3, iter.mcmc = 10000, burn.in = 5000, thin = 3)
theta_hat <- est$Est_sub$Mean
RSE_vec[b] <- mean(est$Est_sub$SD / est$Est_sub$Mean)
MSE_vec[b] <- mean((theta_hat - theta_true)^2)
Coefficient[[b]] <- est$coefficient
Mean_sub[[b]] <- est$Est_sub
Theta_sub[[b]] <- theta_true
}
# result$evaluation <- data.frame(
#   RSE = mean(RSE_vec),
#   MSE = mean(MSE_vec)
# )
result$RSE <- RSE_vec
result$MSE <- MSE_vec
result$theta <- Theta_sub
result$mu <- Mean_sub
result$coef <- Coefficient
return(result)
}
sim_1 <- run_simulation(sigma2_v = 1)
run_simulation <- function(sigma2_v, B = 100) {
result <- list()
n <- 90
X1_fixed <- runif(n, 0, 1)
X2_fixed <- runif(n, 0, 1)
RSE_vec <- numeric(B)
MSE_vec <- numeric(B)
Theta_sub <- vector("list", B)
Coefficient <- vector("list", B)
Mean_sub <- vector("list", B)
for (b in 1:B) {
# Data dari fungsi buatanmu
data_b <- data_sim(sigma2_v = sigma2_v, X1 = X1_fixed, X2 = X2_fixed)
theta_true <- data_b$Mu
formula <- y ~ X1 + X2
# Estimasi dengan fungsi betaTF milikmu
est <- betaTF(formula, area = "codearea", weight = "w", data = data_b, iter.update = 3, iter.mcmc = 10000, burn.in = 5000, thin = 3)
theta_hat <- est$Est_sub$Mean
RSE_vec[b] <- mean(est$Est_sub$SD / est$Est_sub$Mean)
MSE_vec[b] <- mean((theta_hat - theta_true)^2)
Coefficient[[b]] <- est$coefficient
Mean_sub[[b]] <- est$Est_sub
Theta_sub[[b]] <- theta_true
}
# result$evaluation <- data.frame(
#   RSE = mean(RSE_vec),
#   MSE = mean(MSE_vec)
# )
result$RSE <- RSE_vec
result$MSE <- MSE_vec
result$theta <- Theta_sub
result$mu <- Mean_sub
result$coef <- Coefficient
return(result)
}
sim_1 <- run_simulation(sigma2_v = 1)
sim_1$RSE
sim_1$MSE
mean(sim_1$MSE)
sim_1_evaluation <- data.frame(sim_1$RSE, sim_1$MSE)
write_xlsx(sim_1_evaluation, "C:/Users/User/Documents/Nasya/Bismillah Lulus Skripsi/Skripsi FIIXXX/Small Area Estimation/Hasil/Simulasi/simulasi m berbeda/n = 90/evaluation.xlsx")
library(writexl)
write_xlsx(sim_1_evaluation, "C:/Users/User/Documents/Nasya/Bismillah Lulus Skripsi/Skripsi FIIXXX/Small Area Estimation/Hasil/Simulasi/simulasi m berbeda/n = 90/evaluation.xlsx")
theta <- data.frame(theta = unlist(sim_1$theta))
mu <- data.frame(mu = do.call(c, lapply(sim_1$mu, function(x) x$Mean)))
df <- data.frame(theta, mu)
mean(sim_1$MSE)
write_xlsx(df, "C:/Users/User/Documents/Nasya/Bismillah Lulus Skripsi/Skripsi FIIXXX/Small Area Estimation/Hasil/Simulasi/simulasi m berbeda/n = 90/raw.xlsx")
data_sim <- function(sigma2_v, X1 = NULL, X2 = NULL){
narea=40
nsub=3
n=narea*nsub
codearea=c()
for(i in 1:narea){
codearea=c(codearea,rep(i,nsub))
}
b0=b1=b2=0.5
#X1=runif(n,0,1)
#X2=runif(n,0,1)
#if (is.null(X1)) X1 = runif(n, 0, 1)
#if (is.null(X2)) X2 = runif(n, 0, 1)
v=rnorm(narea,0,sqrt(sigma2_v)) #Area Random Effect
u=rnorm(n,0,1) #Subarea Random Effect
vim=c()
for(i in 1:n){vim[i]=v[codearea[i]]}
Mu <- exp(b0+b1*X1+b2*X2+u+vim)/(1+exp(b0+b1*X1+b2*X2+u+vim))
pi=rgamma(1,1,0.5)
A=Mu*pi
B=(1-Mu) * pi
y=rbeta(n,A,B)
y <- ifelse(y<1,y,0.99)
y <- ifelse(y>0,y,0.01)
MU=A/(A+B)
vardir = (A*B)/((A+B)^2*(A+B+1))
w <- runif(n,0.2,0.7)
dataBeta <- as.data.frame(cbind(Mu, y, X1, X2, vardir,codearea,w, u, vim))
return(dataBeta)
}
run_simulation <- function(sigma2_v, B = 100) {
result <- list()
n <- 120
X1_fixed <- runif(n, 0, 1)
X2_fixed <- runif(n, 0, 1)
RSE_vec <- numeric(B)
MSE_vec <- numeric(B)
Theta_sub <- vector("list", B)
Coefficient <- vector("list", B)
Mean_sub <- vector("list", B)
for (b in 1:B) {
# Data dari fungsi buatanmu
data_b <- data_sim(sigma2_v = sigma2_v, X1 = X1_fixed, X2 = X2_fixed)
theta_true <- data_b$Mu
formula <- y ~ X1 + X2
# Estimasi dengan fungsi betaTF milikmu
est <- betaTF(formula, area = "codearea", weight = "w", data = data_b, iter.update = 3, iter.mcmc = 10000, burn.in = 5000, thin = 3)
theta_hat <- est$Est_sub$Mean
RSE_vec[b] <- mean(est$Est_sub$SD / est$Est_sub$Mean)
MSE_vec[b] <- mean((theta_hat - theta_true)^2)
Coefficient[[b]] <- est$coefficient
Mean_sub[[b]] <- est$Est_sub
Theta_sub[[b]] <- theta_true
}
# result$evaluation <- data.frame(
#   RSE = mean(RSE_vec),
#   MSE = mean(MSE_vec)
# )
result$RSE <- RSE_vec
result$MSE <- MSE_vec
result$theta <- Theta_sub
result$mu <- Mean_sub
result$coef <- Coefficient
return(result)
}
sim_1 <- run_simulation(sigma2_v = 1)
mean(sim_1$MSE)
lala <- read_excel("C:/Users/User/Documents/Nasya/Bismillah Lulus Skripsi/Skripsi FIIXXX/Small Area Estimation/Hasil/Simulasi/simulasi m berbeda/n = 90/evaluation.xlsx")
library(readxl)
lala <- read_excel("C:/Users/User/Documents/Nasya/Bismillah Lulus Skripsi/Skripsi FIIXXX/Small Area Estimation/Hasil/Simulasi/simulasi m berbeda/n = 90/evaluation.xlsx")
lala$sim_1.MSE
mean(lala$sim_1.MSE)
mean(lala$sim_1.RSE)
View(sim_1)
sim_1$MSE
lala$sim_1.RSE
sim_1$MSE
lala$sim_1.MSE
sim_1$MSE
mean(lala$sim_1.MSE)
mean(sim_1$MSE)
lala1 <- read_excel("C:/Users/User/Documents/Nasya/Bismillah Lulus Skripsi/Skripsi FIIXXX/Small Area Estimation/Hasil/Simulasi/simulasi m berbeda/n = 60/evaluation.xlsx")
lala2 <- read_excel("C:/Users/User/Documents/Nasya/Bismillah Lulus Skripsi/Skripsi FIIXXX/Small Area Estimation/Hasil/Simulasi/simulasi m berbeda/n = 30/evaluation.xlsx")
mean(lala1$sim_1.MSE)
mean(lala2$sim_1.MSE)
sim_1_evaluation <- data.frame(sim_1$RSE, sim_1$MSE)
write_xlsx(sim_1_evaluation, "C:/Users/User/Documents/Nasya/Bismillah Lulus Skripsi/Skripsi FIIXXX/Small Area Estimation/Hasil/Simulasi/simulasi m berbeda/n = 120/evaluation.xlsx")
theta <- data.frame(theta = unlist(sim_1$theta))
mu <- data.frame(mu = do.call(c, lapply(sim_1$mu, function(x) x$Mean)))
df <- data.frame(theta, mu)
write_xlsx(df, "C:/Users/User/Documents/Nasya/Bismillah Lulus Skripsi/Skripsi FIIXXX/Small Area Estimation/Hasil/Simulasi/simulasi m berbeda/n = 120/raw.xlsx")
lala3 <- read_excel("C:/Users/User/Documents/Nasya/Bismillah Lulus Skripsi/Skripsi FIIXXX/Small Area Estimation/Hasil/Simulasi/simulasi m berbeda/n = 120/evaluation.xlsx")
mean(lala3$sim_1.MSE)
mean(lala$sim_1.MSE)
gc()
devtools::load_all()
## code to prepare `DATASET` dataset goes here
set.seed(123)
narea=10
nsub=3
n=narea*nsub
codearea=c()
for(i in 1:narea){
codearea=c(codearea,rep(i,nsub))
}
X1=runif(n,0,1)
X2=runif(n,0,1)
b0=b1=b2=0.5
v=rnorm(narea,0,1) #Area Random Effect
u=rnorm(n,0,1) #Subarea Random Effect
vim=c()
for(i in 1:n){vim[i]=v[codearea[i]]}
Mu <- exp(b0+b1*X1+b2*X2+u+vim)/(1+exp(b0+b1*X1+b2*X2+u+vim))
pi=rgamma(n,1,0.5)
A=Mu*pi
B=(1-Mu) * pi
y=rbeta(n,A,B)
y <- ifelse(y<1,y,0.99)
y <- ifelse(y>0,y,0.01)
MU=A/(A+B)
vardir = (A*B)/((A+B)^2*(A+B+1))
w <- runif(n,0.2,0.7)
dataBeta <- data.frame(y, X1, X2, vardir,codearea,w)
del_index=sample(1:nrow(dataBeta), 5, replace=F)
dataBetaNS <- dataBeta
dataBetaNS[c(del_index),c(1,4)] <- NA
usethis::use_data(dataBeta, overwrite = TRUE)
usethis::use_data(dataBetaNS, overwrite = TRUE)
devtools::document()
dataBeta_nonsampled <- data("dataBetaNS")
devtools::load_all()
install.packages(".", repos = NULL, type = "source")
devtools::load_all()
devtools::build()
devtools::document()
tinytex::install_tinytex()
devtools::load_all()
library(tinytex)
install.packages("V8")
devtools::build()
devtools::build()
devtools::load_all()
devtools::document()
devtools::build()
gc()
devtools::load_all()
devtools::build()
devtools::load_all()
devtools::build()
devtools::load_all()
devtools::document()
#' @format A data frame with 90 rows and 6 columns:
#' \describe{
#'  \item{y}{Direct estimation of subarea mean \eqn{y_{ij}}}
#'  \item{X1}{Auxiliary variabel of \eqn{X_{ij1}}}
#'  \item{X2}{Auxiliary variabel of \eqn{X_{ij2}}}
#'  \item{codearea}{Index that describes the code relating to warea for each subarea}
#'  \item{w}{Unit proportion on each subarea or weight \eqn{w_{ij}}}
#'  \item{vardir}{Sampling variance of direct estimator \eqn{y_{ij}}}
#' }
#'
"dataBetaNS"
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::build()
devtools::load_all()
devtools::build()
fit <- betaTF(y~X1+X2,area="codearea",weight="w",data=dataBeta)
fit <- betaTF(y~X1+X2,area="codearea",weight="w",data=dataBeta, iter.mcmc = 500)
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::build()
